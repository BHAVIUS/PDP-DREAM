@{
  var prc = (PdpRestContext) ViewData["PRC"]; 
  Layout = prc.RazorMvcLayoutView;
  var SiaaArea = "NPDS"; 
  var SiaaController = "AdminNexus";
}

@Html.Raw(prc.FormatPageTitle("NPDS/AdminNexus/ViewSiaaUsers"))
<p><partial name="_MenuAdminNexus" /></p>

<div id="SiaaGrid">
  @(Html.Kendo().Grid<QebiUserUxm>()
  .Name("PdpAppUserGrid").HtmlAttributes(new { style = "float:left;" })
  .DataSource(ds => ds.Ajax().PageSize(5)
  .Model(m => {
  m.Id(p => p.UserGuid);
  }) // end Model
  .Read(get => get.Action("SelectSiaaUsers", SiaaController, new { area = SiaaArea }))
  .Events(e => e.Error("HandleAjaxErrors"))
  ) // end DataSource
  .Columns(col => {
  col.Bound(row => row.UserGuid).Hidden(true);
  col.Bound(row => row.FirstName).Title("FirstName");
  col.Bound(row => row.LastName).Title("LastName");
  col.Bound(row => row.UserName).Title("UserName");
  col.Bound(row => row.EmailAddress).Title("EmailAddress");
  col.Bound(row => row.UserIsApproved).Title("IsApproved");
  col.Bound(row => row.UserRoleNames).Title("UserRoles");
  }) // end Columns
  .Pageable(pg => pg.AlwaysVisible(true).Responsive(true).Info(true).Position(GridPagerPosition.Top).ButtonCount(3).PageSizes(new[] { 5, 15, 25, 50, 100 }).Refresh(true))
  .Sortable(st => st.SortMode(GridSortMode.SingleColumn).ShowIndexes(false).AllowUnsort(false))
  .Filterable().Resizable(rs => rs.Columns(true))
  )
</div>

<script type="text/javascript">
  $(document).ready(function () {
    $("#SiaaGrid").show();
    $("#PdpAppUserGrid").data("kendoGrid").resize();
  })
  function ResizeGrid(e) {
    var grid = $(this).closest(".k-grid").data("kendoGrid");
    grid.resize();
  }
  function RefreshGrid(e) {
    var grid = $(this).closest(".k-grid").data("kendoGrid");
    grid.dataSource.read();
  }
  function HandleJsonErrors(e) {
    // alert(e.xhr.responseText);
    var msg = $.parseJSON(e.xhr.responseText);
    if (msg) {
      alert("Errors:\n" + msg.join("\n"));
    }
  }
  function HandleAjaxErrors(e) {
    if (e.errors) {
      var message = "Errors:\n";
      $.each(e.errors, function (key, value) {
        if ('errors' in value) {
          $.each(value.errors, function () {
            message += this + "\n";
          });
        }
      });
      alert(message);
    }
  }
</script>
