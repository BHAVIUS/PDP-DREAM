// TkgrControllerDreamMergeSplit.cs 
// Copyright (c) 2007 - 2021 Brain Health Alliance. All Rights Reserved. 
// Licensed per the OSI approved MIT License (https://opensource.org/licenses/MIT).

using Microsoft.AspNetCore.Mvc;

using PDP.DREAM.NpdsCoreLib.Models;
using PDP.DREAM.NpdsDataLib.Models.NpdsSqlDatabase;

namespace PDP.DREAM.ScribeRestApi.Controllers
{
  public partial class TkgrControllerBase
  {
    [HttpGet]
    public IActionResult MergeToSame()
    {
      PRC.PageTitle = "Similar Resreps Merge To Same by " + PRC.RecordAccess.ToString();
      var uxm = new ResrepMergeToSameModel();
      return View(uxm);
    }

    [HttpPut, HttpPost, ValidateAntiForgeryToken] // Put/Post for Rest, Post for Ajax
    public IActionResult MergeToSame(ResrepMergeToSameModel uxm)
    {
      if (ModelState.IsValid)
      {
        uxm = PSDC.MergeResrepRoot(uxm);
        if (uxm.PdpStatusItemStored)
        {
          var controller = ControllerContext.ActionDescriptor.ControllerName;
          return RedirectToAction("SimilarMerged", controller, new { area = PdpConst.PdpMvcArea });
        }
      }
      return View(uxm);
    }

    [HttpGet]
    public IActionResult SimilarMerged()
    {
      PRC.PageTitle = "Similar Resreps Merge To Same by " + PRC.RecordAccess.ToString();
      return View();
    }

    [HttpGet]
    public IActionResult SplitToDifferent()
    {
      PRC.PageTitle = "Discordant Resrep Split To Different by " + PRC.RecordAccess.ToString();
      var uxm = new ResrepSplitToDifferentModel();
      return View(uxm);
    }
    [HttpPut, HttpPost, ValidateAntiForgeryToken] // Put/Post for Rest, Post for Ajax
    public IActionResult SplitToDifferent(ResrepSplitToDifferentModel uxm)
    {
      if (ModelState.IsValid)
      {
        uxm = PSDC.SplitResrepRoot(uxm);
        if (uxm.PdpStatusItemStored)
        {
          var controller = ControllerContext.ActionDescriptor.ControllerName;
          return RedirectToAction("DiscordantSplit", controller, new { area = PdpConst.PdpMvcArea });
        }
      }
      return View(uxm);
    }
    [HttpGet]
    public IActionResult DiscordantSplit()
    {
      PRC.PageTitle = "Discordant Resrep Split To Different by " + PRC.RecordAccess.ToString();
      return View();
    }

    [HttpGet]
    public IActionResult GenerateOntology()
    {
      int? principleCount = 0;
      int? errorCode = PSDC.ScribeGeneratePrinciplesOntology(PRC.AgentGuid, "PDP-DREAM", ref principleCount);
      PRC.PageTitle = $"PDP-DREAM Ontology Generated by {PRC.RecordAccess.ToString()} with {principleCount} Principles";
      return View();
    }

    [HttpGet]
    public IActionResult GenerateDocument()
    {
      int? exampleCount = 0;
      int? errorCode = PSDC.ScribeGenerateExamplesDocument(PRC.AgentGuid, "PDP-DREAM", ref exampleCount);
      PRC.PageTitle = $"PDP-DREAM Document Generated by {PRC.RecordAccess.ToString()} with {exampleCount} Examples";
      return View();
    }

  }

}
