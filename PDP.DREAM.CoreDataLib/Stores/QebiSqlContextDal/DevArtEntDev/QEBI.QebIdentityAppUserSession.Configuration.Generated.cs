//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 3/17/2023 9:55:15 AM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

#nullable disable

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace PDP.DREAM.CoreDataLib.Stores
{
    /// <summary>
    /// There are no comments for QebIdentityAppUserSessionConfiguration in the schema.
    /// </summary>
    [GeneratedCode("Devart Entity Developer", "")]
    public partial class QebIdentityAppUserSessionConfiguration : IEntityTypeConfiguration<QebIdentityAppUserSession>
    {
        /// <summary>
        /// There are no comments for Configure(EntityTypeBuilder<QebIdentityAppUserSession> builder) method in the schema.
        /// </summary>
        public void Configure(EntityTypeBuilder<QebIdentityAppUserSession> builder)
        {
            builder.ToTable(@"QebIdentityAppUserSession", @"dbo");
            builder.Property(x => x.SessionGuidKey).HasColumnName(@"SessionGuidKey").HasColumnType(@"uniqueidentifier").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.SessionDateCreated).HasColumnName(@"SessionDateCreated").HasColumnType(@"datetime2").ValueGeneratedNever();
            builder.Property(x => x.SessionDateAccessed).HasColumnName(@"SessionDateAccessed").HasColumnType(@"datetime2").ValueGeneratedNever();
            builder.Property(x => x.SessionDateExpired).HasColumnName(@"SessionDateExpired").HasColumnType(@"datetime2").ValueGeneratedNever();
            builder.Property(x => x.UserGuidKey).HasColumnName(@"UserGuidKey").HasColumnType(@"uniqueidentifier").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.UserName).HasColumnName(@"UserName").HasColumnType(@"nvarchar(64)").IsRequired().ValueGeneratedNever().HasMaxLength(64);
            builder.Property(x => x.UserNameDisplayed).HasColumnName(@"UserNameDisplayed").HasColumnType(@"nvarchar(64)").IsRequired().ValueGeneratedNever().HasMaxLength(64);
            builder.Property(x => x.UserIsApproved).HasColumnName(@"UserIsApproved").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.UserIsAgent).HasColumnName(@"UserIsAgent").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.AgentGuidRef).HasColumnName(@"AgentGuidRef").HasColumnType(@"uniqueidentifier").ValueGeneratedNever();
            builder.Property(x => x.AgentIsAuthor).HasColumnName(@"AgentIsAuthor").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.AgentIsEditor).HasColumnName(@"AgentIsEditor").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.AgentIsAdmin).HasColumnName(@"AgentIsAdmin").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.AppGuidKey).HasColumnName(@"AppGuidKey").HasColumnType(@"uniqueidentifier").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.AppName).HasColumnName(@"AppName").HasColumnType(@"nvarchar(64)").IsRequired().ValueGeneratedNever().HasMaxLength(64);
            builder.Property(x => x.AppDescription).HasColumnName(@"AppDescription").HasColumnType(@"nvarchar(128)").IsRequired().ValueGeneratedNever().HasMaxLength(128);
            builder.Property(x => x.ConcurrencyStamp).HasColumnName(@"ConcurrencyStamp").HasColumnType(@"nvarchar(64)").IsRequired().ValueGeneratedNever().HasMaxLength(64);
            builder.HasKey(@"SessionGuidKey");
            builder.HasOne(x => x.QebIdentityApp).WithMany(op => op.QebIdentityAppUserSessions).HasForeignKey(@"AppGuidKey").IsRequired(true);
            builder.HasOne(x => x.QebIdentityAppUser).WithOne(op => op.QebIdentityAppUserSession).HasForeignKey(typeof(QebIdentityAppUserSession), @"UserGuidKey").IsRequired(true);

            CustomizeConfiguration(builder);
        }

        #region Partial Methods

        partial void CustomizeConfiguration(EntityTypeBuilder<QebIdentityAppUserSession> builder);

        #endregion
    }

}
