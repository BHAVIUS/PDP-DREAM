//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 12/6/2021 4:00:27 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

#nullable disable

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Internal;
using Microsoft.EntityFrameworkCore.Metadata;

namespace PDP.DREAM.CoreDataLib.Stores
{

    [GeneratedCode("Devart Entity Developer", "")]
    public partial class CoreDbsqlContext : PDP.DREAM.CoreDataLib.Stores.PdpDataContext
    {
        partial void CustomizeConfiguration(ref DbContextOptionsBuilder optionsBuilder);

        public virtual DbSet<CoreEntityTypeItem> CoreEntityTypeItems
        {
            get;
            set;
        }

        public virtual DbSet<CoreInfosetStatusItem> CoreInfosetStatusItems
        {
            get;
            set;
        }

        public virtual DbSet<CoreServiceTypeItem> CoreServiceTypeItems
        {
            get;
            set;
        }

        public virtual DbSet<CoreServiceDefault> CoreServiceDefaults
        {
            get;
            set;
        }

        public virtual DbSet<CoreServiceRoot> CoreServiceRoots
        {
            get;
            set;
        }

        public virtual DbSet<CoreSessionAgent> CoreSessionAgents
        {
            get;
            set;
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.ApplyConfiguration<CoreEntityTypeItem>(new CoreEntityTypeItemConfiguration());
            modelBuilder.ApplyConfiguration<CoreInfosetStatusItem>(new CoreInfosetStatusItemConfiguration());
            modelBuilder.ApplyConfiguration<CoreServiceTypeItem>(new CoreServiceTypeItemConfiguration());
            modelBuilder.ApplyConfiguration<CoreServiceDefault>(new CoreServiceDefaultConfiguration());
            modelBuilder.ApplyConfiguration<CoreServiceRoot>(new CoreServiceRootConfiguration());
            modelBuilder.ApplyConfiguration<CoreSessionAgent>(new CoreSessionAgentConfiguration());
            CustomizeMapping(ref modelBuilder);
        }

        partial void CustomizeMapping(ref ModelBuilder modelBuilder);

        public bool HasChanges()
        {
            return ChangeTracker.Entries().Any(e => e.State == Microsoft.EntityFrameworkCore.EntityState.Added || e.State == Microsoft.EntityFrameworkCore.EntityState.Modified || e.State == Microsoft.EntityFrameworkCore.EntityState.Deleted);
        }

        partial void OnCreated();
    }
}
