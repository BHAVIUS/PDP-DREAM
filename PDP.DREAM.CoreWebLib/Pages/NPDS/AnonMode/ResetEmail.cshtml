@*
  // PORTAL-DOORS Project Copyright (c) 2007 - 2022 Brain Health Alliance. All Rights Reserved.
  // Software license: the OSI approved Apache 2.0 License (https://opensource.org/licenses/Apache-2.0).
*@

@page "/NPDS/AnonMode/ResetEmail"
@model AnonModeResetEmail
@{
  PdpSiteRazorModel psr = Model.PSR;
  // QebUserRestContext qurc = Model.QURC;
}
@Html.Raw(psr.FormatBodyTitle())

<form id="frmResetEmail"  asp-page="/NPDS/AnonMode/ResetEmail" 
  method="post" role="form" class="form-horizontal">
  <p>
    To reset your email, please enter your username and then answer the security question.
  </p>
  <div class="form-group">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.UXM.RequireASQ, new { Value = Model.UXM.RequireASQ })
    @Html.HiddenFor(m => m.UXM.WizardStep, new { Value = Model.UXM.WizardStep })
    @Html.ValidationSummary("", new { @class = "text-danger" })
  </div>
  if ((Model.UXM.WizardStep == 1) || (Model.UXM.WizardStep == 3))
  {
  <div class="form-group">
    @Html.LabelFor(m => m.UXM.UserName, new { @class = "form-label col-md-3" })
    @Html.TextBoxFor(m => m.UXM.UserName, new { Value = Model.UXM.UserName, @class = "form-control col-md-3" })
    @Html.ValidationMessageFor(m => m.UXM.UserName, null, new { @class = "form-label col-md-6 text-danger" })
  </div>
  }
  else
  {
  <div class="form-group">
    @Html.HiddenFor(m => m.UXM.UserName, new { Value = Model.UXM.UserName })
  </div>
  }
  if (Model.UXM.WizardStep == 2)
  {
  <div class="form-group">
    @Html.LabelFor(m => m.UXM.SecurityQuestion, new { @class = "form-label col-md-3" })
    @Html.TextBoxFor(m => m.UXM.SecurityQuestion, new { Value = Model.UXM.SecurityQuestion, @class = "form-control col-md-3" })
    @Html.ValidationMessageFor(m => m.UXM.SecurityQuestion, null, new { @class = "form-label col-md-6 text-danger" })
  </div>
  <div class="form-group">
    @Html.LabelFor(m => m.UXM.SecurityAnswer, new { @class = "form-label col-md-3" })
    @Html.TextBoxFor(m => m.UXM.SecurityAnswer, new { Value = Model.UXM.SecurityAnswer, @class = "form-control col-md-3" })
    @Html.ValidationMessageFor(m => m.UXM.SecurityAnswer, null, new { @class = "form-label col-md-6 text-danger" })
  </div>
  }
  else
  {
  <div class="form-group">
    @Html.HiddenFor(m => m.UXM.SecurityQuestion, new { Value = Model.UXM.SecurityQuestion })
    @Html.HiddenFor(m => m.UXM.SecurityAnswer, new { Value = Model.UXM.SecurityAnswer })
  </div>
  }
  if (Model.UXM.WizardStep == 3)
  {
  <div class="form-group">
    @Html.LabelFor(m => m.UXM.SecurityToken, new { @class = "form-label col-md-3" })
    @Html.TextBoxFor(m => m.UXM.SecurityToken, new { Value = Model.UXM.SecurityToken, @class = "form-control col-md-3" })
    @Html.ValidationMessageFor(m => m.UXM.SecurityToken, null, new { @class = "form-label col-md-6 text-danger" })
  </div>
  <div class="form-group">
    @Html.LabelFor(m => m.UXM.NewEmail, new { @class = "form-label col-md-3" })
    @Html.TextBoxFor(m => m.UXM.NewEmail, new { @class = "form-control col-md-3" })
    @Html.ValidationMessageFor(m => m.UXM.NewEmail, null, new { @class = "form-label col-md-6 text-danger" })
  </div>
  <div class="form-group">
    @Html.LabelFor(m => m.UXM.AltEmail, new { @class = "form-label col-md-3" })
    @Html.TextBoxFor(m => m.UXM.AltEmail, new { @class = "form-control col-md-3" })
    @Html.ValidationMessageFor(m => m.UXM.AltEmail, null, new { @class = "form-label col-md-6 text-danger" })
  </div>
  }
  else
  {
  <div class="form-group">
    @Html.HiddenFor(m => m.UXM.SecurityToken, new { Value = Model.UXM.SecurityToken })
    @Html.HiddenFor(m => m.UXM.NewEmail, new { Value = Model.UXM.NewEmail })
  </div>
  }
  <br />
  <button type="submit" class="btn btn-outline-primary">Reset Email</button>
</form>
